<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">


  <http entry-point-ref="authenticationEntryPoint" auto-config="false" create-session="always" session-fixation-protection="newSession">
    <intercept-url pattern="/login.jsp*" filters="none" />
    <intercept-url pattern="/javascript/*.js" access="IS_AUTHENTICATED_REMEMBERED" />
    <intercept-url pattern="/css/*.css" filters="none"/>
    <intercept-url pattern="/images/**" filters="none" />
    <intercept-url pattern="/**" access="IS_AUTHENTICATED_REMEMBERED" />
    <!-- remember-me key="lifeRocks" token-validity-seconds="86400" / -->
    <!-- anonymous />
    <http-basic / -->
    <logout invalidate-session="true" logout-url="/logout.htm" logout-success-url="/login.jsp?loggedout=true" />
  </http>

<beans:bean id="mySessionRegistry"
    class="org.springframework.security.concurrent.SessionRegistryImpl" />

<beans:bean id="myDefaultConcurrentSessionController"
    class="org.springframework.security.concurrent.ConcurrentSessionControllerImpl">
      <!--beans:property name="maximumSessions" value="1"/-->
      <beans:property name="sessionRegistry" ref="mySessionRegistry" />
      <!--beans:property name="exceptionIfMaximumExceeded" value="true" /-->
</beans:bean>

<beans:bean id="myCustomUserDetailsService"
            class="ilink.security.iBatisAmdocsUserDetailsService">
    <beans:property name="sqlMapClient" ref="sqlMap" />
</beans:bean>

<beans:bean id="myUserAuthenticator" class="ilink.security.NtlmUserAuthenticator">
<beans:property name="jcifsProperties">
            <beans:value>
          jcifs.http.domainController=dcpadds05.rhdroot.com
         <!-- jcifs.http.domainController=162.81.128.202 -->
            jcifs.smb.client.domain=RHDMAIN
            jcifs.smb.client.username=jcifspreauth
            jcifs.http.loadBalance=false
            jcifs.smb.client.password=@MD0cs07
            jcifs.util.loglevel=3
            jcifs.resolveOrder=DNS
            jcifs.smb.lmCompatibility=0
            jcifs.smb.client.useExtendedSecurity=false
</beans:value>       
  </beans:property>
  <beans:property name="authenticatorFlag" value="false"/>
</beans:bean>


<beans:bean id="myCustomAuthenticationProvider" class="ilink.security.AmdocsAuthenticationProvider">
<custom-authentication-provider />
<beans:property name="userDetailsService" ref="myCustomUserDetailsService"/>
<beans:property name="trackMngr" ref="trackingManager"/>
<beans:property name="userAuthenticator" ref="myUserAuthenticator"/>
<beans:property name="hideUserNotFoundExceptions" value="false" />
</beans:bean>


<beans:bean id="myAuthenticationManager" class="org.springframework.security.providers.ProviderManager">
    <beans:property name="providers">
        <beans:list>
            <beans:ref local="myCustomAuthenticationProvider" />
            <beans:ref local="rememberMeAuthenticationProvider" />
        </beans:list>
    </beans:property>
    <beans:property name="sessionController" ref="myDefaultConcurrentSessionController" />
</beans:bean>

<beans:bean id="myCustomAuthenticationProcessingFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
    <custom-filter position="AUTHENTICATION_PROCESSING_FILTER" />
    <beans:property name="defaultTargetUrl" value="/customerList.htm" />
    <beans:property name="rememberMeServices" ref="rememberMeServices" />
    <beans:property name="filterProcessesUrl" value="/j_spring_security_check" /> <!-- NEW -->
    <!--beans:property name="alwaysUseDefaultTargetUrl" value="true" /-->
    <beans:property name="authenticationManager" ref="myAuthenticationManager" />
    <beans:property name="authenticationFailureUrl" value="/login.jsp?authfailed=true" />
	<beans:property name="continueChainBeforeSuccessfulAuthentication" value="false" />
    <beans:property name="allowSessionCreation" value="true" />
    <beans:property name="serverSideRedirect" value="true" />
    <beans:property name="exceptionMappings">
        <beans:props>
            <beans:prop key="org.springframework.security.CredentialsExpiredException">
                /login.jsp?newpassword=true
            </beans:prop>
            <beans:prop key="org.springframework.security.LockedException">
                /login.jsp?acclocked=true
            </beans:prop>
            <beans:prop key="org.springframework.security.DisabledException">
                /login.jsp?accdisabled=true
            </beans:prop>
        </beans:props>
    </beans:property>
</beans:bean>
    
<global-method-security secured-annotations="disabled"/>

<beans:bean id="authenticationEntryPoint" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
    <beans:property name="loginFormUrl" value="/login.jsp" />
    <beans:property name="forceHttps" value="false"/>
</beans:bean>

<beans:bean id="rememberMeServices" class="org.springframework.security.ui.rememberme.TokenBasedRememberMeServices">
  <beans:property name="userDetailsService" ref="myCustomUserDetailsService"/>
  <beans:property name="key" value="lifeRocks"/>
  <beans:property name="tokenValiditySeconds" value="86400"/>
</beans:bean>


<beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider">
  <!-- This ensures that remember-me is added as an authentication provider -->
  <custom-authentication-provider />
  <beans:property name="key" value="lifeRocks"/>
</beans:bean>

    <!-- Override RememberMeProcessingFilter to allow application of other business logic (update login count when user returns to the site -->
<beans:bean id="rememberMeProcessingFilter" class="org.springframework.security.ui.rememberme.RememberMeProcessingFilter">
  <custom-filter position="REMEMBER_ME_FILTER" />
  <beans:property name="rememberMeServices" ref="rememberMeServices"/>
  <beans:property name="authenticationManager" ref="myAuthenticationManager" />
</beans:bean>

<beans:bean id="httpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter">
    <beans:property name="forceEagerSessionCreation" value="true"/>
</beans:bean>


</beans:beans>
